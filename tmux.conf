#
# terminal
#

set -g default-terminal "screen-256color"

#
# window notifications
#

setw -g monitor-activity on
set -g visual-activity on

#
# keys
#

# prefix key: Ctrl-a (like screen, easier to type)
set-option -g prefix C-a
bind a send-prefix

# last-window like in screen
bind C-a last-window

# cycle through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# split panes: | vertical, - horizontal
unbind %
bind | split-window -h
bind - split-window -v

# select panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

#
# status bar
#

# UTF-8
set -g status-utf8 on

# start counting at 1
set -g base-index 1
set -g pane-base-index 1

# window list
set -g status-bg black
set -g status-fg white
set -g status-attr dim

# active window in list
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr bright

# left side
set -g status-left '#[fg=green]#h'

# right side
set -g status-right '#[fg=yellow]%d %b %R'

#
# scroll buffer
#

# enable vi-style cursor keys
setw -g mode-keys vi

# use <PREFIX Esc> to switch to copy mode
unbind [
bind Escape copy-mode

# use <PREFIX p> to paste
bind p paste-buffer

# use 'v' and 'y' like in vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Use reattach-to-user-namespace
set-option -g default-command "which reattach-to-user-namespace >/dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

if-shell "test -f ~/.tmux.conf.local" "source-file ~/.tmux.conf.local"

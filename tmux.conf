#
# Prefix keystroke
#

# Set prefix to <Ctrl-s>
# (easy to type and doesn't interfere with shell keystrokes like Ctrl-a)
unbind C-b
set-option -g prefix C-s
# send prefix keystroke by pressing more than once
bind -r C-s send-prefix

# Reload configuration with <PREFIX> <r>
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

#
# Windows
#

setw -g monitor-activity on
set -g visual-activity on

# Create new window with <PREFIX> <c> (open in working directory)
bind c new-window -c '#{pane_current_path}'

#
# Panes
#

# Split panes: <PREFIX> <|> vertical, <PREFIX> <-> horizontal
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Select panes with <Ctrl-HJKL>, except when in vi
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Resize panes with <Shift>-<Cursor> or <Ctrl>-<Cursor>
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Make current pane a new window with <PREFIX> <b>
bind-key b break-pane -d

bind-key C-j choose-tree

#
# Status bar
#

# Start counting at 1
set -g base-index 1
set -g pane-base-index 1

# Window list
set -g status-bg black
set -g status-fg white
set -g status-attr dim

# Active window
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-attr bright

# Left side
set -g status-left '#[fg=green]#h'

# Right side
set -g status-right '#[fg=yellow]%d %b %R'

#
# Scroll buffer
#

# Enable vi-style cursor keys
setw -g mode-keys vi

# Use <PREFIX> <Esc> to switch to copy mode
unbind [
bind Escape copy-mode

# Use <PREFIX> <p> to paste
bind-key p paste-buffer

# Use 'v' and 'y' like in vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

#
# Application launchers
#

# Split window horizontally for htop
bind-key h split-window -h "htop"

#
# Misc
#

# Terminal colors
set -g default-terminal "screen-256color"

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Use reattach-to-user-namespace
if-shell 'test "$(uname)" = "Darwin"' "set-option -g default-command 'exec reattach-to-user-namespace -l $SHELL'"

# Include individual configuration file
if-shell "test -f ~/.tmux.conf.local" "source-file ~/.tmux.conf.local"
